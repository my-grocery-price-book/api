---
- name: update apt cache
  apt: update_cache=yes cache_valid_time=3600

- name: Install rbenv dependencies
  apt: name={{item}} state=present
  with_items:
    - build-essential
    - git-core

- name: checkout rbenv
  git: repo=https://github.com/sstephenson/rbenv.git dest=/usr/local/rbenv update=no

- name: setup rbenv profile.d
  copy: src=etc/profile.d/rbenv.sh dest=/etc/profile.d/rbenv.sh mode=755

- name: ruby-build
  git: repo=https://github.com/sstephenson/ruby-build.git dest=/usr/local/rbenv/plugins/ruby-build

- name: Install jruby dependencies
  apt: name={{item}} state=present
  with_items:
    - openjdk-7-jre

- name: install ruby
  command: sudo -iu root rbenv install jruby-9.0.0.0-pre1 creates=/usr/local/rbenv/versions/jruby-9.0.0.0-pre1

- name: set default ruby
  command: sudo -iu root rbenv global jruby-9.0.0.0-pre1

- name: rbenv rehash
  command: sudo -iu root rbenv rehash

- name: Install Bundler
  gem: name=bundler state=present user_install=no

- name: installing gem dependencies
  apt: name={{item}} state=present
  with_items:
    - libssl-dev
    - ruby-dev
    - g++

#- name: add ngnix repository
#  apt_repository: repo='deb http://nginx.org/packages/ubuntu/ trusty nginx' state=present
#
#- name: brightbox ruby repos
#  apt_repository: repo='ppa:brightbox/ruby-ng' state=present
#
#- name: update apt cache
#  apt: update_cache=yes cache_valid_time=3600
#
#- name: install software-properties-common
#  apt: name=software-properties-common state=present
#
#- name: installing ruby 2.2
#  apt: name={{item}} state=present
#  with_items:
#    - ruby2.2
#    - ruby2.2-dev
#    - ruby-switch
#
#- name: Swith to ruby 2.2
#  command: ruby-switch --set ruby2.2
#
#- name: Install Bundler
#  gem: name=bundler state=present user_install=no
#
#- name: installing gem dependencies
#  apt: name={{item}} state=present
#  with_items:
#    - libssl-dev
#    - build-essential
#    - g++
#
#- name: installing capistrano dependencies
#  apt: name={{item}} state=present
#  with_items:
#    - git
#
#- name: install ngnix
#  apt: name=nginx state=present
#
#- name: remove default ngnix conf
#  file: name=/etc/nginx/conf.d/default.conf state=absent
#
#- name: upload ngnix price_book_api.conf
#  template: src=etc/nginx/conf.d/price_book_api.conf.j2 dest=/etc/nginx/conf.d/price_book_api.conf mode=644 owner=root
#  notify: restarting ngnix
#
#- name: create price_book_api user
#  user: name=price_book_api shell=/bin/bash createhome=yes
#
#- name: create ssh directory
#  file: path=~/.ssh state=directory
#  sudo: yes
#  sudo_user: price_book_api
#
#- name: Set up authorized_keys for the price_book_api user
#  authorized_key: user=price_book_api key="{{ item }}"
#  with_file:
#    - _deploy_keys/grant_petersen-speelman.pub
#    - _deploy_keys/wercker.pub
#
#- name: Set up authorized_keys for the {{main_remote_user}} user
#  authorized_key: user={{main_remote_user}} key="{{ item }}"
#  with_file:
#    - _ansible_keys/grant_petersen-speelman.pub

